apiVersion: v1
kind: Template
labels:
  template: osa-api-server
metadata:
  name: osa-api-server
  annotations:
    description: osa-api-server
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      service: osa-api-server
    name: osa-api-server
  spec:
    replicas: "${{REPLICAS}}"
    selector:
      service: osa-api-server
    template:
      metadata:
        labels:
          service: osa-api-server
      spec:
        containers:
        - command:
          - /bin/entrypoint.sh
          env:
          - name: GREMLIN_DEFAULT_HOST
            value: ${GREMLIN_DEFAULT_HOST}
          - name: GREMLIN_DEFAULT_PORT
            value: ${GREMLIN_DEFAULT_PORT}
          - name: API_SERVER_PORT
            value: ${API_SERVER_PORT}
          - name: API_SERVER_TIMEOUT
            value: ${API_SERVER_TIMEOUT}
          - name: NUMBER_WORKER_PROCESS
            value: "4"
          - name: CLASS_TYPE
            value: "sync"
          - name: FLASK_LOGGING_LEVEL
            value: ${FLASK_LOGGING_LEVEL}

          image: "${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${IMAGE_TAG}"
          name: osa-api-server
          ports:
          - containerPort: ${{API_SERVER_PORT}}
          livenessProbe:
            initialDelaySeconds: 60
            periodSeconds: 60
            timeoutSeconds: 30
            failureThreshold: 3
            successThreshold: 1
            tcpSocket:
              port: ${{API_SERVER_PORT}}
          readinessProbe:
            tcpSocket:
              port: ${{API_SERVER_PORT}}
            failureThreshold: 3
            successThreshold: 1
            initialDelaySeconds: 20
            periodSeconds: 60
            timeoutSeconds: 30
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      service: osa-api-server
    name: osa-api-server
  spec:
    ports:
    - port: ${{API_SERVER_PORT}}
      name: "${API_SERVER_PORT}"
      targetPort: ${{API_SERVER_PORT}}
      protocol: TCP
    selector:
      service: osa-api-server
- apiVersion: v1
  kind: Route
  metadata:
    name: osa-api-server
  spec:
    host: ${API_SERVER_HOSTNAME}
    to:
      kind: Service
      name: osa-api-server

parameters:
- description: A hostname where the Bayesian API should be exposed (will be auto-generated if empty)
  displayName: Bayesian API hostname
  required: false
  name: API_SERVER_HOSTNAME

- description: Gremlin server host
  displayName: Gremlin server host
  required: true
  name: GREMLIN_DEFAULT_HOST
  value: "bayesian-gremlin-osahttp"

- description: Gremlin server port
  displayName: Gremlin server port
  required: true
  name: GREMLIN_DEFAULT_PORT
  value: "8182"

- description: CPU request
  displayName: CPU request
  required: true
  name: CPU_REQUEST
  value: "128m"

- description: CPU limit
  displayName: CPU limit
  required: true
  name: CPU_LIMIT
  value: "500m"

- description: Memory request
  displayName: Memory request
  required: true
  name: MEMORY_REQUEST
  value: "256Mi"

- description: Memory limit
  displayName: Memory limit
  required: true
  name: MEMORY_LIMIT
  value: "512Mi"

- description: Docker registry where the image is
  displayName: Docker registry
  required: true
  name: DOCKER_REGISTRY
  value: "quay.io"

- description: Docker image to use
  displayName: Docker image
  required: true
  name: DOCKER_IMAGE
  value: "openshiftio/osa-api-server"

- description: Image tag
  displayName: Image tag
  required: true
  name: IMAGE_TAG
  value: "latest"

- description: Number of deployment replicas
  displayName: Number of deployment replicas
  required: true
  name: REPLICAS
  value: "1"

- description: Port Number
  displayName: Port Number
  required: true
  name: API_SERVER_PORT
  value: "5000"

- description: API Service Timeout
  displayName: API Service Timeout
  required: true
  name: API_SERVER_TIMEOUT
  value: "300"

- description: "Flask logging level (see: https://docs.python.org/3/library/logging.html#levels)"
  displayName: Flask logging level
  required: false
  name: FLASK_LOGGING_LEVEL
  value: "INFO"

